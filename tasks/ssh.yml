---
  - name: SSH TCPKeepAlive {{ ssh.TCPKeepAlive }}
    lineinfile:
      dest: /etc/ssh/sshd_config
      state: present
      regexp: '^TCPKeepAlive'
      line: TCPKeepAlive {{ ssh.TCPKeepAlive }}
    notify:
      - Reload sshd
    tags: ssh

  - name: SSH ClientAliveInterval {{ ssh.ClientAliveInterval }}
    lineinfile:
      dest: /etc/ssh/sshd_config
      state: present
      regexp: '^ClientAliveInterval'
      line: ClientAliveInterval {{ ssh.ClientAliveInterval }}
    notify:
      - Reload sshd
    tags: ssh

  - name: SSH ClientAliveCountMax {{ ssh.ClientAliveCountMax }}
    lineinfile:
      dest: /etc/ssh/sshd_config
      state: present
      regexp: '^ClientAliveCountMax '
      line: ClientAliveCountMax {{ ssh.ClientAliveCountMax }}
    notify:
      - Reload sshd
    tags: ssh

  ### SSH KEYS

  # user_profile_path.results содержит item (получается item.item),
  # а путь к домашнеме каталогу сохранился в stdout (item.stdout)

  # простой вариант
  # - name: Set authorized key taken from file
  #   authorized_key:
  #     user: "{{ item.item }}"
  #     state: present
  #     key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
  #   with_items:
  #     - "{{ user_profile_path.results }}"
  #   when: item.stdout != ""
  #   tags: ssh, ssh_keys

  # прописываем пользователям доверенные ключи
  - name: Set authorized public key taken from file
    authorized_key:
      user: "{{ item.1.item }}"
      state: present
      key: "{{ lookup('file', item.0) }}"
    with_nested:
      - "{{ public_ssh_keys }}"
      - "{{ user_profile_path.results }}"
    when: item.1.stdout != ""
    tags: ssh, ssh_keys

  # копируем закрытый ключ для перемещения между машинами
  - name: Copy ssh local cloud key
    copy:
      src: "{{ item.0 }}"
      dest: "{{ item.1.stdout }}/.ssh/" #"{{ item.1.invocation.module_args.path }}/.ssh/"
      mode: preserve
    with_nested:
      - "{{ private_ssh_keys }}"
      - "{{ user_profile_path.results }}"
    when: item.1.stdout != "" #and item.1.stderr != ""
    tags: ssh, ssh_keys
